// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  role      UserRole @default(STUDENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  student   Student?
  lecturer  Lecturer?

  @@map("users")
}

model Student {
  id          String   @id @default(cuid())
  nim         String   @unique
  name        String
  email       String   @unique
  phone       String?
  address     String?
  program     String   // Program Studi
  semester    Int
  status      StudentStatus @default(ACTIVE)
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  krs         KRS[]
  grades      Grade[]

  @@map("students")
}

model Lecturer {
  id          String   @id @default(cuid())
  nidn        String   @unique
  name        String
  email       String   @unique
  phone       String?
  position    String   // Jabatan akademik
  department  String   // Jurusan/Departemen
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  courses     Course[]

  @@map("lecturers")
}

model Course {
  id          String   @id @default(cuid())
  code        String   @unique
  name        String
  credits     Int
  semester    Int
  description String?
  lecturerId  String
  lecturer    Lecturer @relation(fields: [lecturerId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  krs         KRS[]
  grades      Grade[]

  @@map("courses")
}

model KRS {
  id        String   @id @default(cuid())
  studentId String
  courseId  String
  semester  String   // Format: "2024/2025-Ganjil"
  year      Int
  status    KRSStatus @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  student   Student @relation(fields: [studentId], references: [id], onDelete: Cascade)
  course    Course  @relation(fields: [courseId], references: [id], onDelete: Cascade)

  @@unique([studentId, courseId, semester])
  @@map("krs")
}

model Grade {
  id        String   @id @default(cuid())
  studentId String
  courseId  String
  semester  String
  year      Int
  grade     String   // A, B+, B, C+, C, D, E
  score     Float?   // Nilai angka
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  student   Student @relation(fields: [studentId], references: [id], onDelete: Cascade)
  course    Course  @relation(fields: [courseId], references: [id], onDelete: Cascade)

  @@unique([studentId, courseId, semester])
  @@map("grades")
}

enum UserRole {
  ADMIN
  LECTURER
  STUDENT
}

enum StudentStatus {
  ACTIVE
  INACTIVE
  GRADUATED
  DROPOUT
}

enum KRSStatus {
  PENDING
  APPROVED
  REJECTED
}